--------------------------------------------------------------------
file: from_academic_lit/goodenough_flood_loan_verbatim_withBreach.l4

roles: Env, Arbiter, Lender, Borrower

contract params:
    LOAN_AMOUNT : Pos$ := 1000
    INTEREST_RATE : Fraction(0,1) := 0.05
    PAYMENT1_AMOUNT : Pos$ := 550
    PAYMENT2_AMOUNT : Pos$ := 525

state vars:
    writeonly paid_to_lender : $ := 0
    writeonly paid_to_borrower : $ := 0
    cures : Nat := 0

situation ActiveContract:
    Borrower may RequestPrinciple (next_event_dt ≤ 151 days, 0:00:00)
    RequestDeadlinePasses (next_event_td > 151 days, 0:00:00)

action RequestPrinciple()  transitions to PrincipleRequested:
    transform:
        prove (PAYMENT1_AMOUNT == ((LOAN_AMOUNT / 2) + (LOAN_AMOUNT * INTEREST_RATE)))
        prove (PAYMENT2_AMOUNT == ((LOAN_AMOUNT / 2) + ((LOAN_AMOUNT / 2) * INTEREST_RATE)))

situation PrincipleRequested:
    Lender may AdvancePrinciple (next_event_dt ≤ 152 days, 0:00:00)
    AdvanceDeadlinePasses (next_event_td > 152 days, 0:00:00)

action AdvancePrinciple()  transitions to Pmt1Accruing:
    transform:
        paid_to_borrower := LOAN_AMOUNT

action AdvanceDeadlinePasses()  transitions to DefaultLender

situation DefaultLender:
    Borrower may FileLawsuit (next_event_td < 2343 days, 0:00:00)
    StatuteOfLimitations (next_event_dt ≤ 2343 days, 0:00:00)

situation Pmt1Accruing:
    Borrower may Bankruptcy1 (next_event_td < 516 days, 0:00:00)
    Borrower may Convenant1 (next_event_td < 516 days, 0:00:00)
    Borrower may RepsWarr1 (next_event_td < 516 days, 0:00:00)
    Pmt1DuedateArrives (next_event_dt ≤ 516 days, 0:00:00)

action RepsWarr1()  transitions to BorrowerDefaultRepsWarr1

situation BorrowerDefaultRepsWarr1:
    Lender may GiveNoticeOfGeneralDefault1 (next_event_td == last_situation_td)
    Breach_Lender (next_event_td > last_situation_td)

action Convenant1()  transitions to BorrowerDefaultConvenant1

situation BorrowerDefaultConvenant1:
    Lender may GiveNoticeOfGeneralDefault1 (next_event_td == last_situation_td)
    Breach_Lender (next_event_td > last_situation_td)

action Bankruptcy1()  transitions to BorrowerDefaultBankruptcy1

situation BorrowerDefaultBankruptcy1:
    Lender may GiveNoticeOfGeneralDefault1 (next_event_td == last_situation_td)
    Breach_Lender (next_event_td > last_situation_td)

action GiveNoticeOfGeneralDefault1()  transitions to BorrowerNotifiedOfGeneralDefault1

situation BorrowerNotifiedOfGeneralDefault1:
    if (cures < 1):
        Borrower may CureDefault1 (next_event_td ≤ (last_situation_td + 2d))
    AcceleratePayments12 (next_event_td > (last_situation_td + 2d))

action CureDefault1()  transitions to Pmt1Accruing:
    transform:
        cures := (cures + 1)

action Pmt1DuedateArrives()  transitions to Pmt1Due

situation Pmt1Due:
    Borrower may MakePmt1 (next_event_td ≤ (last_situation_td + 1d))
    MissPmt1 (next_event_td > (last_situation_td + 1d))

action MissPmt1()  transitions to BorrowerDefaultMissedPmt1

situation BorrowerDefaultMissedPmt1:
    Lender may GiveBorrowerNotice1 (next_event_td == last_situation_td)
    Breach_Lender (next_event_td > last_situation_td)

action GiveBorrowerNotice1()  transitions to BorrowerNotifiedOfPmt1Default

situation BorrowerNotifiedOfPmt1Default:
    Borrower may MakePmt1 (next_event_td ≤ (last_situation_td + 1d))
    AcceleratePayments12 (next_event_td > (last_situation_td + 1d))

action MakePmt1()  transitions to Pmt2Accruing:
    transform:
        paid_to_lender := PAYMENT1_AMOUNT

action AcceleratePayments12()  transitions to Payments1and2Accelerating

situation Payments1and2Accelerating:
    Borrower may MakePmt12 (next_event_td == last_situation_td)
    AcceleratedPaymentFailure1 (next_event_td > (last_situation_td + 1d))

action MakePmt12()  transitions to Term:
    transform:
        paid_to_lender := (PAYMENT2_AMOUNT + PAYMENT1_AMOUNT)

action AcceleratedPaymentFailure1()  transitions to Crisis1

situation Crisis1:
    Borrower may MakePmt12 (next_event_td == last_situation_td)
    Lender may FileLawsuit (next_event_td < 2343 days, 0:00:00)
    StatuteOfLimitations (next_event_dt ≤ 2343 days, 0:00:00)

situation Pmt2Accruing:
    Borrower may Bankruptcy2 (next_event_td < 882 days, 0:00:00)
    Borrower may Convenant2 (next_event_td < 882 days, 0:00:00)
    Borrower may RepsWarr2 (next_event_td < 882 days, 0:00:00)
    Pmt2DueDateArrives (next_event_dt ≤ 882 days, 0:00:00)

action RepsWarr2()  transitions to BorrowerDefaultRepsWarr2

situation BorrowerDefaultRepsWarr2:
    Lender may GiveNoticeOfGeneralDefault2 (next_event_td == last_situation_td)
    Breach_Lender (next_event_td > last_situation_td)

action Convenant2()  transitions to BorrowerDefaultConvenant2

situation BorrowerDefaultConvenant2:
    Lender may GiveNoticeOfGeneralDefault2 (next_event_td == last_situation_td)
    Breach_Lender (next_event_td > last_situation_td)

action Bankruptcy2()  transitions to BorrowerDefaultBankruptcy2

situation BorrowerDefaultBankruptcy2:
    Lender may GiveNoticeOfGeneralDefault2 (next_event_td == last_situation_td)
    Breach_Lender (next_event_td > last_situation_td)

action GiveNoticeOfGeneralDefault2()  transitions to BorrowerNotifiedOfGeneralDefault2

situation BorrowerNotifiedOfGeneralDefault2:
    Borrower may AcceleratePayment2 (next_event_td > (last_situation_td + 2d))
    if (cures < 1):
        Borrower may CureDefault2 (next_event_td ≤ (last_situation_td + 2d))

action CureDefault2()  transitions to Pmt2Accruing:
    transform:
        cures := (cures + 1)

action Pmt2DueDateArrives()  transitions to Pmt2Due

situation Pmt2Due:
    Borrower may MakePmt2 (next_event_td == last_situation_td)
    MissPmt2 (next_event_td > (last_situation_td + 1d))

action MissPmt2()  transitions to BorrowerDefaultMissedPmt2

situation BorrowerDefaultMissedPmt2:
    Lender may GiveBorrowerNotice2 (next_event_td == last_situation_td)
    Breach_Lender (next_event_td > last_situation_td)

action GiveBorrowerNotice2()  transitions to BorrowerNotifiedOfPmt2Default

situation BorrowerNotifiedOfPmt2Default:
    Borrower may MakePmt2 (next_event_td ≤ (last_situation_td + 2d))
    AcceleratePayment2 (next_event_td > (last_situation_td + 2d))

action AcceleratePayment2()  transitions to Payment2Accelerating

situation Payment2Accelerating:
    Borrower may MakePmt2 (next_event_td == last_situation_td)
    AcceleratedPaymentFailure2 (next_event_td > (last_situation_td + 1d))

action AcceleratedPaymentFailure2()  transitions to Crisis2

situation Crisis2:
    Borrower may MakePmt2 (next_event_td == last_situation_td)
    Lender may FileLawsuit (next_event_td < 2343 days, 0:00:00)
    StatuteOfLimitations (next_event_dt ≤ 2343 days, 0:00:00)

action MakePmt2()  transitions to Term:
    transform:
        paid_to_lender := (paid_to_lender + PAYMENT2_AMOUNT)
        prove (paid_to_lender' == (PAYMENT1_AMOUNT + PAYMENT2_AMOUNT))

action StatuteOfLimitations()  transitions to Canc

action FileLawsuit()  transitions to Lit

action RequestDeadlinePasses()  transitions to Term

situation Term:
    EnterFulfilled (next_event_td == last_situation_td)

situation Canc:
    EnterFulfilled (next_event_td == last_situation_td)

situation Lit:
    EnterFulfilled (next_event_td == last_situation_td)

action EnterFulfilled()  transitions to Fulfilled
