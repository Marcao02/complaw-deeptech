(GlobalVars 
	(lease_term_start : ℕ := NaN)		; formerly never : Date
	(lease_term_end : ℕ := NaN)		; formerly never : Date
	(writeOnceMore lease_terminated : Bool := false)
	(branchUnaffecting inconly total_rent_paid : ℕ := 0)
)

(Actors Owner Renter)

(ContractParams 
	(MOVE_IN_DATE : ℕ := 1)  ; formerly 1-1-2011 : Date
	(LEASE_DURATION : ℕ := 180) ; 6*30 days  formerly type 6M : Duration
	(RENT : Price = 1000)
	(MAX_RENT_DELAY : ℕ = 7)  ; days  formerly 7D : Duration
	(DAYS_IN_A_MONTH : ℕ = 30)  ; this is temporary
)

(ProseContract 
	(P1 'The term of this lease is for {LEASE_DURATION} months, beginning on {MOVE_IN_DATE}. At the expiration of said term, the lease will automatically be renewed for a period of one month unless either party (Landlord or Tenant) notifies the other of its intention to terminate the lease at least one month before its expiration date.')
	(P2 'The lease is for 1 apartment, which is provided by Landlord throughout the term.')
	(P3 'Tenant agrees to pay the amount of {RENT} per month, each payment due within {MAX_RENT_DELAY} of the start of each month.')	
)

(FormalContract	
	"Lease Hvitved"		
	(StartState Move_In)
	(EventStates
		(Move_In()  
			(Fallbacks 
				(Lease_Term_Started() on MOVE_IN_DATE)
			)
		)
	
		(Lease_Term_Started()
			(Entrance
				(conjecture ((event_start_date) == (monthStartDay)))
				(lease_term_start := (event_start_date))
				(lease_term_end := ((event_start_date) + LEASE_DURATION))
			)
			(ActorEvents
				(Owner must
					(EnsureApartmentReady() immediately)
				)
			)			
		)

		(EnsureApartmentReady()  
			(Fallbacks 
				(Month_Started())
			)
		)

		(Month_Started()  
			(ActorEvents
				(Renter may
					(Request_Termination_At_Rent_Or_Before() by (earliest ((monthStartDay) + MAX_RENT_DELAY) (lease_term_end - DAYS_IN_A_MONTH)))
					(PayRent() by ((monthStartDay) + MAX_RENT_DELAY))
				)
				(Owner may
					(Request_Termination_At_Rent_Or_Before() by (earliest ((monthStartDay) + MAX_RENT_DELAY) (lease_term_end - DAYS_IN_A_MONTH)))
				)
			)
			(Fallbacks
				(RentDue())
			)
		)

		(RentDue()
			(ActorEvents
				(Renter must
					(PayRent() by ((monthStartDay) + MAX_RENT_DELAY))
				)
			)
		)  
		
		(Request_Termination_At_Rent_Or_Before()  
			(Entrance
				(lease_terminated := true)
			)
			(ActorEvents
				(Renter must
					(PayRent() by ((monthStartDay) + MAX_RENT_DELAY))
				)
			)						
		)

		(PayRent()  
			(Entrance
				(total_rent_paid += 1000)
			)
			(ActorEvents
				(Renter may
					(Request_Termination_After_Rent() by (earliest (monthEndDay) (lease_term_end - DAYS_IN_A_MONTH)))
				)
				(Owner may
					(Request_Termination_After_Rent() by (earliest (monthEndDay) (lease_term_end - DAYS_IN_A_MONTH)))
				)
			)
			
			(Fallbacks 
				(Month_Ended() on (monthEndDay))
			)
		)

		(Request_Termination_After_Rent()  
			(Entrance
				(lease_terminated := true)
			)
			(Fallbacks
				(Month_Ended() on (monthEndDay))
			)
		)

		(Month_Ended()  
			(Fallbacks
				(Lease_Term_Ended() on lease_term_end)
				(Month_Started() on (today() + 1))
			)
		)

		(Lease_Term_Ended()  
			(ActorEvents
				(Renter mustif lease_terminated
					(Move_Out() immediately)
				)
			)
			(Fallbacks 
				; this only activates when lease_terminated is false
				(Lease_Term_Started())
			)
		)

		(Move_Out()  
			(Fallbacks 
				(Fulfilled())
			)
		)
	)
)

(DotFileName 'hvitved_lease.dot')
(ImgFileName 'hvitved_lease.png')