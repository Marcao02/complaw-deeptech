---------------------
file: serious/SAFE.l4

roles: Investor, Company

contract params:
    PURCHASE_AMOUNT : $ := 100000
    VALUATION_CAP : $ := inf
    DISCOUNT_RATE : ℝ := 1
    START_INVESTOR_COMMON_STOCKS : ℕ := 0
    START_INVESTOR_SAFE_PREFERRED_STOCKS : ℕ := 0
    START_INVESTOR_CASH : $ := 0

global vars:
    has_cap : Bool := VALUATION_CAP < inf
    has_discount : Bool := DISCOUNT_RATE < 1
    writeAtMostOnce investor_Common_Stocks : ℕ := START_INVESTOR_COMMON_STOCKS
    writeAtMostOnce investor_SAFE_Preferred_Stocks : ℕ := START_INVESTOR_SAFE_PREFERRED_STOCKS
    writeAtMostOnce investor_cash : $ := START_INVESTOR_CASH
    writeAtMostOnce safe_price : $
    writeAtMostOnce discount_price : $
    writeAtMostOnce conversion_price : $
    writeAtMostOnce initial_price_per_share_standard_preferred_stock : $
    writeAtMostOnce liq_price : $
    writeAtMostOnce liq_cashout : $ := 0
    writeAtMostOnce investor_remaining_investment_L : $
    writeAtMostOnce company_cash_remaining : ℕ
    writeAtMostOnce investor_liq_hypothetical_shares : ℕ
    writeAtMostOnce investor_percent_of_cashout_investor_investments : %
    writeAtMostOnce dis_cashout : $

section InvestorInvests:
    Company weakly-must CommitToEquityFinancing nodeadline
    Company weakly-must CommitToLiquidityEvent(_1, _2, _3, _4) nodeadline
    Company weakly-must CommitToDissolution nodeadline

action CommitToEquityFinancing()  transitions to AfterCommitToEquityFinancing
    following section:
        Company weakly-must DeliverDocsWithPRA discretionary
        Company weakly-must DeliverDocsWithoutPRA discretionary

action DeliverDocsWithPRA()  transitions to AfterDeliverDocsWithPRA
    following section:
        Company must IssueSAFEPreferredStock(_1, _2) discretionary

action DeliverDocsWithoutPRA()  transitions to AfterDeliverDocsWithoutPRA
    following section:
        Company must SubmitProRataRightsAgreementForSigning discretionary

action SubmitProRataRightsAgreementForSigning()  transitions to AfterSubmitProRataRightsAgreementForSigning
    following section:
        Investor must SignPRA discretionary

action SignPRA()  transitions to AfterSignPRA
    following section:
        Company must IssueSAFEPreferredStock(_1, _2) discretionary

action IssueSAFEPreferredStock(company_capitalization, premoney_valuation)  transitions to AfterIssueSAFEPreferredStock:
    transform:
        safe_price := VALUATION_CAP / company_capitalization
        initial_price_per_share_standard_preferred_stock := premoney_valuation / company_capitalization
        discount_price := initial_price_per_share_standard_preferred_stock * DISCOUNT_RATE
        conversion_price := (min safe_price discount_price)
        investor_SAFE_Preferred_Stocks += PURCHASE_AMOUNT / conversion_price
    following section:
        Company must DoEquityFinancing discretionary

action DoEquityFinancing()  transitions to Fulfilled

action CommitToLiquidityEvent(change_of_control, company_cash_at_liquidity_event, liquidity_capitalization, reduction_needed_to_qualify_as_usa_tax_free_reorg)  transitions to AfterCommitToLiquidityEvent:
    transform:
        liq_price := VALUATION_CAP / liquidity_capitalization
        investor_liq_hypothetical_shares := PURCHASE_AMOUNT / liq_price
        investor_percent_of_cashout_investor_investments := investor_liq_hypothetical_shares / liquidity_capitalization + investor_liq_hypothetical_shares
        if change_of_control and reduction_needed_to_qualify_as_usa_tax_free_reorg > 0:
            investor_Common_Stocks += (round investor_percent_of_cashout_investor_investments * reduction_needed_to_qualify_as_usa_tax_free_reorg / liq_price)            investor_remaining_investment_L := PURCHASE_AMOUNT - investor_percent_of_cashout_investor_investments * reduction_needed_to_qualify_as_usa_tax_free_reorg
        else:
            investor_remaining_investment_L := PURCHASE_AMOUNT
        company_cash_remaining := company_cash_at_liquidity_event - reduction_needed_to_qualify_as_usa_tax_free_reorg
    following section:
        Investor may ChooseCashPayment discretionary
        Investor may ChooseStockPayment discretionary
        Company should AutoChooseStockPayment discretionary

action AutoChooseStockPayment()  transitions to AfterAutoChooseStockPayment
    following section:
        Company must TransferCommonStock discretionary

action ChooseStockPayment()  transitions to AfterChooseStockPayment
    following section:
        Company must TransferCommonStock discretionary

action TransferCommonStock()  transitions to AfterTransferCommonStock:
    transform:
        investor_Common_Stocks += (round investor_remaining_investment_L - liq_cashout / liq_price)
    following section:
        Company must DoLiquidityEvent discretionary

action ChooseCashPayment()  transitions to AfterChooseCashPayment
    following section:
        Company must TransferCash_L discretionary

action TransferCash_L()  transitions to AfterTransferCash_L:
    transform:
        if investor_remaining_investment_L ≤ company_cash_remaining * investor_percent_of_cashout_investor_investments:
            liq_cashout := investor_remaining_investment_L
        else:
            liq_cashout := company_cash_remaining * investor_percent_of_cashout_investor_investments
        investor_cash += liq_cashout
    following section:
        if liq_cashout < investor_remaining_investment_L:
            Company must TransferCommonStock discretionary
        if liq_cashout == investor_remaining_investment_L:
            Company must DoLiquidityEvent discretionary

action DoLiquidityEvent()  transitions to Fulfilled

action CommitToDissolution()  transitions to AfterCommitToDissolution
    following section:
        Company must TransferCash_D(company_cash_at_dissolution_event, investor_percent_of_dissolving_investor_investments) discretionary

action TransferCash_D(company_cash_at_dissolution_event, investor_percent_of_dissolving_investor_investments)  transitions to AfterTransferCash_D:
    transform:
        if PURCHASE_AMOUNT ≤ company_cash_at_dissolution_event * investor_percent_of_dissolving_investor_investments:
            dis_cashout := PURCHASE_AMOUNT
        else:
            dis_cashout := company_cash_at_dissolution_event * investor_percent_of_dissolving_investor_investments
        investor_cash := dis_cashout
    following section:
        if dis_cashout < PURCHASE_AMOUNT:
            Company must TransferAssets(_) discretionary
        if dis_cashout == PURCHASE_AMOUNT:
            Company must Dissolve discretionary

action TransferAssets(liquidity_capitalization)  transitions to AfterTransferAssets:
    transform:
        liq_price := VALUATION_CAP / liquidity_capitalization
        investor_Common_Stocks += PURCHASE_AMOUNT - dis_cashout / liq_price
    following section:
        Company must Dissolve discretionary

action Dissolve()  transitions to Fulfilled
