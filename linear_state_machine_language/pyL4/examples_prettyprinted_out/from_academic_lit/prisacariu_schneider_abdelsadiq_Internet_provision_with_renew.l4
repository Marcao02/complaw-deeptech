----------------------------------------------------------------------------------------
file: from_academic_lit/prisacariu_schneider_abdelsadiq_Internet_provision_with_renew.l4

roles: Env, ISP, Client

contract params:
    HIGH_USAGE_FEE : ℕ := 10
    HOURS_PARAM : ℕ := 24

global vars:
    contract_canceled : Bool := False
    cancel_notice_sent_by_post : Bool := False
    cancel_notice_sent_by_email : Bool := False
    unsettled_infraction : Bool := False
    usage_level_normal : Bool := True
    sent_delay_email : Bool := False
    paid : ℕ := 0
    paidBefore24 : Bool := False
    traffic_low_since : TimeDelta
    infraction_time : TimeDelta

action SendCancelNoticeByPost()  non-transitioning:
    transform:
        cancel_notice_sent_by_post := True
        if cancel_notice_sent_by_email:
            contract_canceled := True
        else:


action SendCancelNoticeByEmail()  non-transitioning:
    transform:
        cancel_notice_sent_by_email := True
        if cancel_notice_sent_by_post:
            contract_canceled := True
        else:


action Reset()  transitions to NoInfraction:
    transform:
        unsettled_infraction := False
        usage_level_normal := True
        paidBefore24 := False
        sent_delay_email := False
        paid := 0

action RaiseTraffic()  transitions to UnsettledInfraction:
    transform:
        traffic_low_since := event_td
        usage_level_normal := False
        if ¬unsettled_infraction:
            infraction_time := event_td            unsettled_infraction := True
        else:


action LowerTraffic()  transitions to UnsettledInfraction:
    transform:
        usage_level_normal := True
        traffic_low_since := event_td

action SendDelayEmail()  non-transitioning:
    transform:
        sent_delay_email := True

action Pay(x)  transitions to UnsettledInfraction:
    transform:
        paid += HIGH_USAGE_FEE * x
        if event_td ≤ infraction_time + 24h:
            paidBefore24 := True
        else:


action ClientBreaches()  transitions to Breach_Client

action EnterFulfilled()  transitions to Fulfilled

section NoInfraction:
    if ¬contract_canceled:
        Client may RaiseTraffic no_time_constraint
    if contract_canceled:
        EnterFulfilled
    ISP may SendCancelNoticeByPost no_time_constraint
    ISP may SendCancelNoticeByEmail no_time_constraint

section UnsettledInfraction:
    ISP may SendCancelNoticeByPost no_time_constraint
    ISP may SendCancelNoticeByEmail no_time_constraint
    if ¬usage_level_normal:
        Client may LowerTraffic event_td ≤ infraction_time + 48h
    Client may SendDelayEmail event_td ≤ infraction_time + 48h
    Client may Pay(x) event_td ≤ infraction_time + 48h where x > 0 and x ≤ 3
    if (and* ¬sent_delay_email usage_level_normal paid ≥ 1):
        Reset event_td ≤ infraction_time + 24h
    if ¬sent_delay_email and ¬usage_level_normal or ¬paidBefore24:
        ClientBreaches event_td > infraction_time + 24h
    if (and* sent_delay_email usage_level_normal paid ≥ 2):
        Reset event_td ≤ infraction_time + 48h
    if (and* sent_delay_email traffic_low_since ≤ infraction_time + 24h usage_level_normal paid ≥ 2):
        Reset event_td ≤ infraction_time + 48h
    if (and* sent_delay_email traffic_low_since > infraction_time + 24h usage_level_normal paid ≥ 3):
        Reset event_td ≤ infraction_time + 48h
    ClientBreaches event_td > infraction_time + 48h
    if contract_canceled:
        EnterFulfilled
