----------------------------------------------------------------------------------------------
file: from_academic_lit/hvitved_master_sales_agreement_full_with_ids_and_obligation_objects.l4

roles: Env, Customer, Vendor

contract params:
    MAX_UNITS : ℕ := 1000
    CONTRACT_LIFE : TimeDelta := 365d
    PRICE_PER_UNIT : $ := 100

global vars:
    inconly next_order_id : Id := 0
    inconly units_ordered : ℕ := 0
    writeonce order_period_ends : TimeDelta := (contractStart_td + CONTRACT_LIFE)
    nonoperative inconly units_delivered : ℕ := 0
    nonoperative inconly units_invoiced : ℕ := 0
    nonoperative inconly total_paid : $ := 0
    this_delivery_deadline : TimeDelta
    this_orderid : ℕ
    Vendor_must_Deliver_by : TDMap
    Vendor_may_EmailInvoice_by : TDMap
    Customer_must_PayBill_by : TDMap

section VendorAcceptingOrders:
    if (MAX_UNITS - units_ordered > 0):
        Customer may SubmitNewOrder(?q) (event_td ≤ order_period_ends) where (0 < ?q and (?q ≤ MAX_UNITS - units_ordered))
    Customer may PayBill(?0, ?1) (tdGEQ Customer_must_PayBill_by (tuple ?0 ?1) event_td) where (mapHas Customer_must_PayBill_by (tuple ?0 ?1))
    Customer obligation-options-include PayBill(?0, ?1) (tdLT Customer_must_PayBill_by (tuple ?0 ?1) event_td) where (mapHas Customer_must_PayBill_by (tuple ?0 ?1))
    if (MAX_UNITS - units_ordered == 0):
        EnterFulfilled (event_td ≥ order_period_ends)
    Vendor may Deliver(?0, ?1) (tdGEQ Vendor_must_Deliver_by (tuple ?0 ?1) event_td) where (mapHas Vendor_must_Deliver_by (tuple ?0 ?1))
    Vendor obligation-options-include Deliver(?0, ?1) (tdLT Vendor_must_Deliver_by (tuple ?0 ?1) event_td) where (mapHas Vendor_must_Deliver_by (tuple ?0 ?1))
    Vendor may EmailInvoice(?0, ?1) (tdGEQ Vendor_may_EmailInvoice_by (tuple ?0 ?1) event_td) where (mapHas Vendor_may_EmailInvoice_by (tuple ?0 ?1))

action SubmitNewOrder(quantity)  transitions to VendorAcceptingOrders:
    transform:
        this_delivery_deadline := (max (14d + event_td) ((days (ceil quantity / 10)) + event_td))
        units_ordered += quantity
        this_orderid := next_order_id
        next_order_id += 1
        Vendor_must_Deliver_by := (mapSet Vendor_must_Deliver_by (tuple quantity this_orderid) this_delivery_deadline)

action Deliver(quantity, orderid)  transitions to VendorAcceptingOrders:
    transform:
        units_delivered += quantity
        Vendor_may_EmailInvoice_by := (mapSet Vendor_may_EmailInvoice_by (tuple quantity orderid) (sectionEntrance_td + 30d))

action EmailInvoice(quantity, orderid)  transitions to VendorAcceptingOrders:
    transform:
        units_invoiced += quantity
        Customer_must_PayBill_by := (mapSet Customer_must_PayBill_by (tuple quantity orderid) (sectionEntrance_td + 14d))

action PayBill(quantity, orderid)  transitions to VendorAcceptingOrders:
    transform:
        total_paid += quantity * PRICE_PER_UNIT

action EnterFulfilled()  transitions to Fulfilled
