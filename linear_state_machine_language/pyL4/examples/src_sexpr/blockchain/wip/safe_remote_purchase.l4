; As of 10 March this example requires implementing some extra stuff before it will parse.
;
; This contract would be used by a unilateral contract that includes some sort of "invitation to treat" action.

; Source is https://vyper.readthedocs.io/en/latest/vyper-by-example.html
; Header comment block copied from that source:
;
; Safe Remote Purchase
; Originally from
; https://github.com/ethereum/solidity/blob/develop/docs/solidity-by-example.rst
; ported to vyper and optimized
; Rundown of the transaction:
; 1. Seller posts item for sale and posts safety deposit of double the item value.
;  Balance is 2*value.
; (1.1. Seller can reclaim deposit and close the sale as long as nothing was purchased.)
; 2. Buyer purchases item (value) plus posts an additional safety deposit (Item value).
;  Balance is 4*value.
; 3. Seller ships item.
; 4. Buyer confirms receiving the item. Buyer's deposit (value) is returned.
; Seller's deposit (2*value) + items value is returned. Balance is 0.


; New L4 features needed:
; <RoleId>.funds - the value of the funds at the address of the actor with the given role id, and
;                  compile error if it is posible to have more than one actor with that role. As of 10 mar 2018
;                  pyL4 doesn't support more than one actor with the same role, but that would probably be necessary
;                  for blockchain applications.
;
; $sentval - defined in a PayInAction or PayInOutAction, the value of the funds sent as part of the transaction
; $funds - defined everywhere, the funds associated with the contract's address

(Roles Buyer Seller)
(TypeDefinitions
    (MoneyAmount = (Dimensioned PosInt32 "MoneyAmount"))
)
(ContractParams
    (ITEM_VALUE : MoneyAmount)
)

(Situation AwaitingSellerDeposit
    (Seller may SubmitDeposit (where (Seller.funds ≥ (2 * ITEM_VALUE))))
)

(AllowedRoles Seller
    (PayInAction SubmitDeposit
        (Precondition ($sentval == (2 * ITEM_VALUE)))
        (FollowingSituation
            (Next
                (Seller may Abort)
                (Buyer may Purchase (where (Buyer.funds ≥ (2 * ITEM_VALUE)) ))
            )
        )
        (Postcondition ($funds ≥ (2 * ITEM_VALUE)))
    )

    (PayOutAction Abort
        (Precondition ($funds ≥ (2 * ITEM_VALUE)))
        (StateTransform
            (send Seller (2 * ITEM_VALUE))
        )
        (TransitionsTo Fulfilled)

    )

    (Action SendItem
        (FollowingSituation
            (Buyer may SendReceiveReport)
        )
    )
)

(AllowedRoles Buyer
    (PayInAction Purchase
        (Precondition ($funds ≥ (2 * ITEM_VALUE)))
        (Precondition ($sentval == (2 * ITEM_VALUE)))
        (FollowingSituation
            (Next
                (Seller may SendItem)
            )
        )
        (Postcondition ($funds ≥ (4 * ITEM_VALUE)))
    )

    (PayInAction Purchase
        (Precondition ($funds ≥ (2 * ITEM_VALUE)))
        (Precondition ($sentval == (2 * ITEM_VALUE)))
        (FollowingSituation
            (Next
                (Seller may SendItem)
            )
        )
        (Postcondition ($funds ≥ (4 * ITEM_VALUE)))
    )

    (PayOutAction SendReceiveReport
        (Precondition ($funds ≥ (4 * ITEM_VALUE)))
        (StateTransform
            (send Buyer ITEM_VALUE)
            (send Seller (3 * ITEM_VALUE))
        )
        (TransitionsTo Fulfilled)
    )
)













(Action SendItem     (AllowedRoles Seller)
    (FollowingSituation
        (Buyer may SendReceiveReport)
    )
)

(PayInAction SubmitDeposit   (AllowedRoles Seller)
    (Precondition ($sentval == (2 * ITEM_VALUE)))
    (FollowingSituation
        (Next
            (Seller may Abort)
            (Buyer may Purchase (where (Buyer.funds ≥ (2 * ITEM_VALUE)) ))
        )
    )
    (Postcondition ($funds ≥ (2 * ITEM_VALUE)))
)

(PayOutAction Abort  (AllowedRoles Seller)
    (Precondition ($funds ≥ (2 * ITEM_VALUE)))
    (StateTransform
        (send Seller (2 * ITEM_VALUE))
    )
    (TransitionsTo Fulfilled)

)

(PayInAction Purchase     (AllowedRoles Buyer)
    (Precondition ($funds ≥ (2 * ITEM_VALUE)))
    (Precondition ($sentval == (2 * ITEM_VALUE)))
    (FollowingSituation
        (Next
            (Seller may SendItem)
        )
    )
    (Postcondition ($funds ≥ (4 * ITEM_VALUE)))
)

(Action SendItem     (AllowedRoles Seller)
    (FollowingSituation
        (Buyer may SendReceiveReport)
    )
)

(PayOutAction SendReceiveReport (AllowedRoles Buyer)
    (Precondition ($funds ≥ (4 * ITEM_VALUE)))
    (StateTransform
        (send Buyer ITEM_VALUE)
        (send Seller (3 * ITEM_VALUE))
    )
    (TransitionsTo Fulfilled)
)
