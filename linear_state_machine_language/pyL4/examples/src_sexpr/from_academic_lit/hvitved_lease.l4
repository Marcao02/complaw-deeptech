(Roles Landlord Tenant)

(TimeUnit d)

(ContractParams
	(LEASE_DURATION : TimeDelta := (days (4 * 29))) ;  approx 4 months
	(RENT : Nat = 1000)
	(MAX_RENT_DELAY : TimeDelta := 7D) ; 7 days
	(MIN_TERMINATION_NOTICE : TimeDelta := 30D) ; approx 1 month
)

(ProseContract
	(P1 'The term of this lease is for {LEASE_DURATION} months, beginning on {LEASE_TERM_START}. At the expiration of said term, the lease will automatically be renewed for a period of one month unless either party (Landlord or Tenant) notifies the other of its intention to terminate the lease at least one month before its expiration date.')
	(P2 'The lease is for 1 apartment, which is provided by Landlord throughout the term.')
	(P3 'Tenant agrees to pay the amount of {RENT} per month, each payment due within {MAX_DAYS_RENT_DELAY} days of the start of each month.')   )

(StateVars
	(lease_term_start : TimeDelta )		; formerly never : Date
	(lease_term_end : TimeDelta )		; formerly never : Date
	(writeOnceMore lease_terminated : Bool := false)
	(branchUnaffecting inconly total_rent_paid : Nat := 0)   )


(Macro RequestTerminationActionRuleMacro (RoleId SituationId)
	(if (not lease_terminated)
		(RoleId may (RequestTerminationFromSituationId) (when next_event_td ≤ (min ((monthStartDay_td) + MAX_RENT_DELAY) (lease_term_end - MIN_TERMINATION_NOTICE))))
	)
)


(Macro RequestTerminationActionMacro SituationId
	(Action RequestTerminationFromSituationId (AllowedSubjects Landlord Tenant) (TransitionsTo SituationId)
		(StateTransform (lease_terminated' = true))
	)
)

(FormalContract
	"Lease Hvitved"
	(StartSituation Start)

	(Situation Start (Next (Landlord must (EnsureApartmentReady) immediately)))

	(RequestTerminationActionMacro MonthStarted)
	(RequestTerminationActionMacro AfterPayRent)
	(RequestTerminationActionMacro MonthEnded)

	(Action EnsureApartmentReady (AllowedRoles Landlord))
	(Situation AfterEnsureApartmentReady (Next (StartLeaseTerm immediately)))

	(Action StartLeaseTerm (TransitionsTo MonthStarted)
		(StateTransform
			; (conjecture ((eventTimestamp) == (monthStartDay_td)))
			(lease_term_start' = event_td)
			(lease_term_end' = (event_td + LEASE_DURATION))   ))

	(Action EnterMonthStarted (TransitionsTo MonthStarted))

	(Situation MonthStarted
		; (Next
			(Tenant may (PayRent) (when next_event_td ≤ ((monthStartDay_td) + MAX_RENT_DELAY)))
			(Breach_Tenant (after ((monthStartDay_td) + MAX_RENT_DELAY)))
			(RequestTerminationActionRuleMacro (Tenant MonthStarted))
			(RequestTerminationActionRuleMacro (Landlord MonthStarted))
		; )
	)

	(Action PayRent (StateTransform (total_rent_paid' += 1000))
		(FollowingSituation
			(Next
				(EnterMonthEnded (when next_event_td == (monthEndDay_td)))
				(RequestTerminationActionRuleMacro (Tenant AfterPayRent))
				(RequestTerminationActionRuleMacro (Landlord AfterPayRent))  )))

	(Action EnterMonthEnded (AllowedSubjects Env)
		(1 ≤ traversals ≤ nonconstant)
		(FollowingSituation
			(Pre (situation_entrance_td ≤ lease_term_end))
			(Next
				(if (lease_term_end ≤ (situation_entrance_td + 1D))
					(EnterLeaseTermEnded immediately)   )
				(if (lease_term_end > (situation_entrance_td + 1D))
					(EnterMonthStarted (when next_event_td == (situation_entrance_td + 1d)))   )
				(RequestTerminationActionRuleMacro (Tenant MonthEnded))
				(RequestTerminationActionRuleMacro (Landlord MonthEnded))   )))

	(Action EnterLeaseTermEnded (AllowedSubjects Env)
		(1 ≤ traversals ≤ nonconstant)
		(FollowingSituation
			(Next
				(if lease_terminated (Tenant must (MoveOut) immediately))
				(if (not lease_terminated) (StartLeaseTerm immediately))   )))

	(Action MoveOut (TransitionsTo Fulfilled) )
)