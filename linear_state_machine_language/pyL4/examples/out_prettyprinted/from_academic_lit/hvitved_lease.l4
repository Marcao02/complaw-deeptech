----------------------------------------
file: from_academic_lit/hvitved_lease.l4

roles: Env, Arbiter, Landlord, Tenant

contract params:
    LEASE_DURATION : TimeDelta := (days (4 * 29))
    RENT : Nat := 1000
    MAX_RENT_DELAY : TimeDelta := 7d
    MIN_TERMINATION_NOTICE : TimeDelta := 30d

state vars:
    lease_term_start : TimeDelta
    lease_term_end : TimeDelta
    writeoncemore lease_terminated : Bool := False
    branchunaffecting inconly total_rent_paid : Nat := 0

situation Start:
    Landlord must EnsureApartmentReady immediately

action RequestTerminationFromMonthStarted()  transitions to MonthStarted:
    transform:
        lease_terminated := True

action RequestTerminationFromAfterPayRent()  transitions to AfterPayRent:
    transform:
        lease_terminated := True

action RequestTerminationFromMonthEnded()  transitions to MonthEnded:
    transform:
        lease_terminated := True

action EnsureApartmentReady()  transitions to AfterEnsureApartmentReady

situation AfterEnsureApartmentReady:
    StartLeaseTerm

action StartLeaseTerm()  transitions to MonthStarted:
    transform:
        lease_term_start := event_td
        lease_term_end := (event_td + LEASE_DURATION)

action EnterMonthStarted()  transitions to MonthStarted

situation MonthStarted:
    Breach_Tenant (next_event_td == (((monthStartDay_td ) + MAX_RENT_DELAY) + 1d))
    if ¬lease_terminated:
        Landlord may RequestTerminationFromMonthStarted (next_event_td ≤ (min ((monthStartDay_td ) + MAX_RENT_DELAY) (lease_term_end - MIN_TERMINATION_NOTICE)))
    Tenant may PayRent (next_event_td ≤ ((monthStartDay_td ) + MAX_RENT_DELAY))
    if ¬lease_terminated:
        Tenant may RequestTerminationFromMonthStarted (next_event_td ≤ (min ((monthStartDay_td ) + MAX_RENT_DELAY) (lease_term_end - MIN_TERMINATION_NOTICE)))

action PayRent()  transitions to AfterPayRent:
    transform:
        total_rent_paid := (total_rent_paid + 1000)
    following situation:
        EnterMonthEnded (next_event_td == (monthEndDay_td ))
        if ¬lease_terminated:
            Landlord may RequestTerminationFromAfterPayRent (next_event_td ≤ (min ((monthStartDay_td ) + MAX_RENT_DELAY) (lease_term_end - MIN_TERMINATION_NOTICE)))
        if ¬lease_terminated:
            Tenant may RequestTerminationFromAfterPayRent (next_event_td ≤ (min ((monthStartDay_td ) + MAX_RENT_DELAY) (lease_term_end - MIN_TERMINATION_NOTICE)))

action EnterMonthEnded()  transitions to MonthEnded
    following situation:
        pre: (situation_entrance_td ≤ lease_term_end)
        if (lease_term_end ≤ (situation_entrance_td + 1d)):
            EnterLeaseTermEnded
        if (lease_term_end > (situation_entrance_td + 1d)):
            EnterMonthStarted (next_event_td == (situation_entrance_td + 1d))
        if ¬lease_terminated:
            Landlord may RequestTerminationFromMonthEnded (next_event_td ≤ (min ((monthStartDay_td ) + MAX_RENT_DELAY) (lease_term_end - MIN_TERMINATION_NOTICE)))
        if ¬lease_terminated:
            Tenant may RequestTerminationFromMonthEnded (next_event_td ≤ (min ((monthStartDay_td ) + MAX_RENT_DELAY) (lease_term_end - MIN_TERMINATION_NOTICE)))

action EnterLeaseTermEnded()  transitions to LeaseTermEnded
    following situation:
        if ¬lease_terminated:
            StartLeaseTerm
        if lease_terminated:
            Tenant must MoveOut immediately

action MoveOut()  transitions to Fulfilled
