(Roles Landlord Tenant)

(TimeUnit d)

(ContractParams
	(LEASE_DURATION : TimeUnit := (days (4 * 29))) ;  approx 4 months
	(RENT : Money = 1000)
	(MAX_RENT_DELAY : TimeUnit := 7D) ; 7 days
	(MIN_TERMINATION_NOTICE : TimeUnit := 30D) ; approx 1 month
)

(ProseContract
	(P1 'The term of this lease is for {LEASE_DURATION} months, beginning on {LEASE_TERM_START}. At the expiration of said term, the lease will automatically be renewed for a period of one month unless either party (Landlord or Tenant) notifies the other of its intention to terminate the lease at least one month before its expiration date.')
	(P2 'The lease is for 1 apartment, which is provided by Landlord throughout the term.')
	(P3 'Tenant agrees to pay the amount of {RENT} per month, each payment due within {MAX_DAYS_RENT_DELAY} days of the start of each month.')   )

(GlobalVars
	(lease_term_start : ℕ )		; formerly never : Date
	(lease_term_end : ℕ )		; formerly never : Date
	(writeOnceMore lease_terminated : Bool := false)
	(branchUnaffecting inconly total_rent_paid : ℕ := 0)   )

(Macro RequestTerminationActionRuleMacroTenant SectionId
	(if (not lease_terminated)
		(Tenant may (RequestTerminationFromSectionId) (next_event_td ≤ (min ((monthStartDay_td) + MAX_RENT_DELAY) (lease_term_end - MIN_TERMINATION_NOTICE)))) ))

(Macro RequestTerminationActionRuleMacroLandlord SectionId
	(if (not lease_terminated)
		(Landlord may (RequestTerminationFromSectionId) (next_event_td ≤ (min ((monthStartDay_td) + MAX_RENT_DELAY) (lease_term_end - MIN_TERMINATION_NOTICE)))) ))

(Macro RequestTerminationActionMacro SectionId
	(Action RequestTerminationFromSectionId (AllowedSubjects Landlord Tenant) (TransitionsTo SectionId)
		(StateTransform (lease_terminated := true))		))

(FormalContract
	"Lease Hvitved"
	(StartSection Start)

	(Section Start (Next (Landlord must (EnsureApartmentReady) immediately)))

	(apply-macro RequestTerminationActionMacro MonthStarted)
	(apply-macro RequestTerminationActionMacro AfterPayRent)
	(apply-macro RequestTerminationActionMacro MonthEnded)

	(Action EnsureApartmentReady (AllowedRoles Landlord))
	(Section AfterEnsureApartmentReady (Next (StartLeaseTerm immediately)))

	(Action StartLeaseTerm (TransitionsTo MonthStarted)
		(StateTransform
			; (conjecture ((eventTimestamp) == (monthStartDay_td)))
			(lease_term_start := event_td)
			(lease_term_end := (event_td + LEASE_DURATION))   ))

	(Action EnterMonthStarted (TransitionsTo MonthStarted))

	(Section MonthStarted
		(Next
			(Tenant obligation-options-include (PayRent) (next_event_td ≤ ((monthStartDay_td) + MAX_RENT_DELAY)))
			(apply-macro RequestTerminationActionRuleMacroTenant MonthStarted)
			(apply-macro RequestTerminationActionRuleMacroLandlord MonthStarted)
		)
	)

	(Action PayRent (StateTransform (total_rent_paid += 1000))
		(FollowingSection
			(Next
				(EnterMonthEnded (next_event_td == (monthEndDay_td)))
				(apply-macro RequestTerminationActionRuleMacroTenant AfterPayRent)
				(apply-macro RequestTerminationActionRuleMacroLandlord AfterPayRent)  )))

	(Action EnterMonthEnded (AllowedSubjects Env)
		(1 ≤ traversals ≤ nonconstant)
		(FollowingSection
			(Pre (sectionEntrance_td ≤ lease_term_end))
			(Next
				(if (lease_term_end ≤ (sectionEntrance_td + 1D))
					(EnterLeaseTermEnded immediately)   )
				(if (lease_term_end > (sectionEntrance_td + 1D))
					(EnterMonthStarted (next_event_td == (sectionEntrance_td + 1d)))   )
				(apply-macro RequestTerminationActionRuleMacroTenant MonthEnded)
				(apply-macro RequestTerminationActionRuleMacroLandlord MonthEnded)   )))

	(Action EnterLeaseTermEnded (AllowedSubjects Env)
		(1 ≤ traversals ≤ nonconstant)
		(FollowingSection
			(Next
				(if lease_terminated (Tenant must (MoveOut) immediately))
				(if (not lease_terminated) (StartLeaseTerm immediately))   )))

	(Action MoveOut (TransitionsTo Fulfilled) )
)

; (DotFileName 'hvitved_lease_pitstops.dot')
; (ImgFileName 'hvitved_lease_pitstops.png')