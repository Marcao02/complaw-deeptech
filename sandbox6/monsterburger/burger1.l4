
-- L4 implementation of the Monster Burger challenge

IMPORT :--
  Currency (currency,Potato,USD)

CONTRACT :--
  title        = "Burger Challenge"
  description  = "https://groups.google.com/a/lists.legalese.com/forum/#!topic/talk/7GuYsUzpoLs"
  genre        = DiscountableSale
  jurisdiction = US_TX
  startClause  = FoodChallenge

PARTIES :--
  customer     : Person  (The "Customer")      = { name = "Bellatrix Lestrange"
                                                 , affiliation = Ravenclaw
  }
  restaurant   : Company (The "Restaurant")    = { name = "Bob's Burger Shack"  }

DEFINE :--
  normalPrice  : Currency (The "Normal Price") = { curr = USD, value = 7.20 }
  mainDeadline : Duration (The "Deadline")     = hour 1

TYPES :--
  EatState = Eaten | Unfinished | Puked
  TempSpec = Hot | Cold
  FoodSpec = { temperature = TempSpec }
  BurgerSpec = FoodSpec ** { cheese = Bool, pickle = Bool }


CLAUSE FoodChallenge: "Entering The Food Challenge."
  PARTY customer
  SHALL Pay ( recipient <- restaurant, amount <- normalPrice )
    AND DescribeBurger ( burgerspec -> bs )
  DUE   immediately
  HENCE

CLAUSE ReadyBurger: "Burger to be prepared."
  PARTY restaurant
  SHALL Serve ( recipient <- customer, burgerspec <- bs, dish -> dish )
  DUE   within 20 minutes
  HENCE

CLAUSE DoneClaim: "Customer claims completion."
  GIVEN ( deadline = mainDeadline, global threadStop : Bool = False )
  PARTY customer
  MAY   Notify ( recipient <- restaurant, body <- "I have finished." )
  BEFORE deadline REMAINING z
    THEN DoneClaim ( deadline <- z ) -- recurse
    LEST CheckCompletion -- upon timeout, do this
  REQUIRING

CLAUSE CheckCompletion: "Restaurant verifies completion."
  PARTY restaurant
  SHALL CheckEmpty ( dish  <- dish
                   , state -> s
                   )
  DUE 10 minutes
  HENCE
    CASE s OF Eaten     => threadStop = True ; Refund ( deadline <- 10 min )
              Puked     => threadStop = True ; FULFILLED
              otherwise => NOOP -- same as Fulfilled but conventionally for a subbranch
  LEST Refund ( deadline <- 10 min )

CLAUSE Refund: "Restaurant refunds customer"
  GIVEN ( deadline : Duration )
  PARTY restaurant
  SHALL Pay ( recipient <- customer, amount <- normalPrice )
  BEFORE deadline
  HENCE FULFILLED
  LEST BREACH

ACTION CheckEmpty
  GIVEN  ( dish  : Dish )
  GIVING ( state : EatState )
  event "foo" bar


ACTION Serve
  GIVEN ( recipient  : Person
        , burgerspec : BurgerSpec
        , dish       : Dish
        , party      : Party )
  event "%s delivers a %s matching specification %s to %s" party dish burgerspec recipient

ACTION Notify
  GIVEN ( recipient : Party
        , body      : Message
        , party     : Party )
  event "%s notifies %s, saying: %s" party recipient body

ACTION Pay
  GIVEN ( recipient : Entity
        , amount    : Currency
        , party     : Party )
  event "%s pays %s to %s" party amount recipient

ACTION DescribeBurger
  GIVEN  ( party      : Party )
  GIVING ( burgerspec : BurgerSpec )
  event "%s specifies a desired burger %s" party burgerspec
  
